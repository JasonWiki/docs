# 反向代理配置
server {
    # 监听端口
    listen       20560;

    # 域名
    # server_name  hostname1 hostname2;

    # 字符集
    charset utf-8;

    # 单独的 access_log 文件
    $ access_log  logs/192.168.2.149.access.log  main;

    # 反向代理配置，将所有请求为 http://hostname 的请求全部转发到 upstream 中定义的目标服务器中.
    location / {
      proxy_pass http://service-core1:20560;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }
}



# 负载均衡配置
upstream demo_load_balance {
    server service-core1:20560 max_fails=1 weight=1 fail_timeout=30s;
    server service-core2:20560 max_fails=1 weight=1 fail_timeout=30s;

    server service-core3:20560 max_fails=1  backup;
}
# 负载均衡
server {
    # 监听端口
    listen       20561;

    # 域名
    # server_name  hostname3 hostname3;

    # 字符集
    charset utf-8;

    # 反向代理配置，将所有请求为 http://hostname 的请求全部转发到 upstream 中定义的目标服务器中.
    location / {
      proxy_pass http://demo_load_balance;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      # 定制响应头信息
      #add_header base_server "$host:$server_port";
      #add_header base_server_info "$server_name:$server_port - $server_protocol";
    }
}

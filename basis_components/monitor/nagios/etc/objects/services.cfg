# service, 监控的服务

# 参数说明
define service {
    name                                        模板名称

    host_name                                   主机名,这里指定的是host的名字 多个host之前用,隔开
    hostgroup_name                              组名.监控主机组上的所有服务.通常host_name和group只指定一个

    parents                                     服务依赖 很少使用到
    service_description                         服务的描述信息
    display_name                                服务的显示名称
    servicegroups                               多个服务组 使多个服务组使用相同配置
    is_volatile                                 [0/1]

    check_command                               用于检查这个服务的命令
    initial_state                               [o,w,u,c] 初始状态

    check_interval                              正常检查间隔, 单位分钟 (正常情况下, 每隔多长时间检查一次)

    retry_interval                              故障检查间隔, 单位分钟 (当出现故障的时候, 从 正常检查间隔 转到 故障检查间隔 来处理)
    max_check_attempts                          故障检查最大重试次数, 单位数量 (故障检查间隔到了最大重试次数后, 会发出报警, 并且跳出 故障检查间隔 转到 正常检查间隔(直到故障恢复, 否则不会再转到 故障检查间隔) )


    active_checks_enabled                       [0/1] 主动监控开关, 默认 1
    passive_checks_enabled                      [0/1] 被动监控开关, 默认 1

    check_period                                监控的时间范围
    event_handler_enabled                       [0/1] 是否启用事件处理, 默认 0
    event_handler                               事件处理命令

    process_perf_data                           [0/1] 记录性能参数
    retain_status_information                   [0/1] 设定启用状态信息保存功能。当 Nagios 重新启动的时候不会是空数据，而是先显示上次离线时最后保留的状态数据。
    retain_nonstatus_information                [0/1] 设定启用非状态信息保存功能。当 Nagios 重新启动的时候不会是空数据，而是先显示上次离线时最后保留的非状态数据。

    notifications_enabled                       [0/1] 是否通知
    notification_interval                       5 重复发送提醒信息的最短间隔时间。默认间隔时间是 60 分钟。如果这个值设置为 0，将不会发送重复提醒，单位分钟
    notification_period                         workhours 发送提醒的时间段。非常重要的主机（服务）我定义为7×24，一般的主机（服务）就定义为上班时间
    notification_options                        [w,u,c,r,] w代表warning告警 u代表unknown未知 c代表critical严重 r代表recover恢复 d代表down奔溃

    contacts                                    联系人
    contact_groups                              联系人组
}



# 定义模板
define service {
    # 模板名称
    name                    passive_service
    host_name               linux-server
    service_description     check-disk-sda1
    check_command           check-disk!/dev/sda1
    # 重试次数
    max_check_attempts      5
    # 检查间隔
    check_interval          5
    # 重试间隔
    retry_interval          3
    # 监控的时间范围
    check_period            24x7
    # 主机在故障后 再次发送通知的间隔时间
    notification_interval   30
    # 主机故障时发送通知的时间范围
    notification_period     24x7
    notification_options    w,c,r
    # 通知组
    contact_groups          linux-admins
}



# 对先后的 service 进行升级
# 例如: 对 HadoopCluster host 组和 ApplicationLog1 host 的 ClusterDisk 服务升级
define serviceescalation{
        host_name	              ApplicationLog1
        service_description	    ClusterDisk

        contact_groups	        MonitorGroup

        # 第3条信息起,改变频率间隔
        first_notification	    3
        # 第n条信息起，恢复频率间隔
        last_notification	      0
        #通知间隔(60fenzhong )
        notification_interval	  60
        # 通知时间段
        escalation_period	      dw_team_workhours
        # 通知报警状态
        escalation_options	    w,u,c,r
}



# 服务组通知
define servicegroup{
    servicegroup_name   服务组名称
    alias   服务组名称
    members 将服务加到服务组内
    servicegroup_members    将服务组加到服务组内,子组
    notes   说明 用于界面展示
}


# HadoopClusterIsAlive
define service{
        hostgroup_name          HadoopCluster
        service_description     HadoopClusterIsAlive
        check_command           check-host-alive

        # 重试次数
        max_check_attempts      3
        # 检查间隔
        check_interval          1
        # 重试间隔
        retry_interval          1
        # 主机在故障后 再次发送通知的间隔时间
        notification_interval   10
        # 监控时间范围
        check_period            24x7
        # 主机故障时发送通知的时间范围
        notification_period     24x7
        notification_options    w,u,c,r
        contact_groups          MonitorGroup
}

user  nginx;

worker_processes  8;

error_log  /opt/logs/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


# 七层代理
http {
    # 文件扩展名与文件类型映射表
    include       /etc/nginx/mime.types;

    # 默认文件类型
    default_type  application/octet-stream;

    # 日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # 访问日志
    access_log  /opt/logs/nginx/access.log  main;

    # 开启文件传输，一般应用都应设置为on；若是有下载的应用，则可以设置成off来平衡网络I/O和磁盘的I/O来降低系统负载
    sendfile        on;

    # 告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送.
    #tcp_nopush     on;

    # 长连接超时时间，单位是秒
    keepalive_timeout  60;

    #gzip  on;

    include /etc/nginx/conf.d/http-*.conf;
}



# 四层代理
stream {
    # 指定预读缓冲区大小
    # preread_buffer_size                 16k;

    # 指定预读阶段时间
    # preread_timeout                     30s;

    # 读取 PROXY 协议头来完成. 如果在这段时间内没有发送完整的报头，则连接关闭
    # proxy_protocol_timeout              30s;

    # 将用于解析上游服务器名称的名称服务器配置为地址，例如
    # resolver                            resolver 127.0.0.1 [::1]:5353 valid=30s;
    # 设置名称解析超时时间
    # resolver_timeout                    5s;

    # 设置服务器的配置
    # server {
      # 监听端口 或 UNIX sockets
      ## address:port [ssl] [udp] [proxy_protocol]
      ## unix:/var/run/nginx.sock
      # listen address:port;
    # }

    include /etc/nginx/conf.d/stream-*.conf;
}
